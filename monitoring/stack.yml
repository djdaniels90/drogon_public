version: "3.7"

networks:
  monitoring:
    external:
      name: infra_monitoring
  proxy:
    external:
      name: infra_proxy

services:
  # TODO: finish the ini config as well as creating the media stacks
  # varken:
  #   image: boerderij/varken:latest
  #   volumes:
  #     - varken_config:/config
  #     - ./varken.ini:/config/varken.ini
  #   networks:
  #     # this needs access to the media stacks
  #     - proxy
  #   environment:
  #     - TZ

  # https://hub.docker.com/r/linuxserver/tautulli
  # PORT: 8181:8181
  tautulli:
    image: linuxserver/tautulli:latest
    networks:
      - proxy
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${SERVICES_FOLDER}/tautulli_data:/config
    deploy:
      restart_policy:
         condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.tautulli.rule=Host(`tautulli.$INTERNAL_HOST`)"
        - "traefik.http.routers.tautulli.entrypoints=web"
        - "traefik.http.services.tautulli.loadbalancer.server.port=8181"

  # # https://hub.docker.com/r/netdata/netdata
  # # grep docker /etc/group | cut -d ':' -f 3
  # # PGID=^^
  netdata:
    image: netdata/netdata
    environment:
      - PGID
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - proxy
      - monitoring
    volumes:
      - ${SERVICES_FOLDER}/netdata:/etc/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      restart_policy:
         condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.netdata.rule=Host(`netdata.$INTERNAL_HOST`)"
        - "traefik.http.routers.netdata.entrypoints=web"
        - "traefik.http.services.netdata.loadbalancer.server.port=19999"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    networks:
      - monitoring
      - proxy
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      # - /cgroup:/cgroup:ro
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.$INTERNAL_HOST`)"
        - "traefik.http.routers.cadvisor.entrypoints=web"
        - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
        - "org.label-schema.group=monitoring"

  nodeexporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    # ports:
    #   - 9100
    networks:
      - monitoring
    deploy:
      labels:
        - "org.label-schema.group=monitoring"

  # Monitoring Frontend
  grafana:
    image: grafana/grafana
    user: "${PUID}:${PGID}"
    volumes:
      - ${SERVICES_FOLDER}/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - PGID
      - PUID
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,flant-statusmap-panel,btplc-trend-box-panel,vonage-status-panel,mxswat-separator-panel,snuids-radar-panel,grafana-polystat-panel,natel-plotly-panel,zuburqan-parity-report-panel,xginn8-pagerduty-datasource,michaeldmoore-multistat-panel,savantly-heatmap-panel,agenty-flowcharting-panel,yesoreyeram-boomtable-panel,michaeldmoore-annunciator-panel,yesoreyeram-boomtheme-panel,petrslavotinek-carpetplot-panel,briangann-gauge-panel,neocat-cal-heatmap-panel,fatcloud-windrose-panel,digiapulssi-breadcrumb-panel
    networks:
      - monitoring
      - proxy
    deploy:
      labels:
        - "org.label-schema.group=monitoring"
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.$INTERNAL_HOST`)"
        - "traefik.http.routers.grafana.entrypoints=web"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  # influxdb:
  #   image: influxdb:latest
  #   user: "${PUID}:${PGID}"
  #   volumes:
  #     - ${SERVICES_FOLDER}/influx_data:/var/lib/influxdb
  #     - ./influxdb.conf:/etc/influxdb/influxdb.conf
  #     # - ./influxdb/config/:/etc/influxdb/
  #   environment:
  #     - PGID
  #     - PUID
  #     # - INFLUXDB_DB=db0
  #     - INFLUXDB_GRAPHITE_ENABLED=true
  #     - INFLUXDB_ADMIN_USER=admin
  #     - INFLUXDB_ADMIN_PASSWORD=admin
  #   networks:
  #     - monitoring
    # ports:
    #   # The API for InfluxDB is served on port 8086
    #   - "8086:8086"
    #   - "8082:8082"
      #  graphite endpoint
    #   -  2003:2003
    deploy:
      labels:
        - "org.label-schema.group=monitoring"

  prometheus:
    image: prom/prometheus
    user: "${PUID}:${PGID}"
    volumes:
      - ./prometheus/:/etc/prometheus/
      # CONVERT THIS FOLDER TO freenas based block storage along with other dbs
      - ${SERVICES_FOLDER}/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=365d'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
      - proxy
    environment:
      - PGID
      - PUID
    deploy:
      labels:
        - "org.label-schema.group=monitoring"

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring
    deploy:
      labels:
        - "org.label-schema.group=monitoring"

  pushgateway:
    image: prom/pushgateway
    networks:
      - monitoring
    deploy:
      labels:
        - "org.label-schema.group=monitoring"
